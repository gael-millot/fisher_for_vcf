/*
#########################################################################
##                                                                     ##
##     fisher_for_vcf.config                                           ##
##                                                                     ##
##     Gael A. Millot                                                  ##
##     Bioinformatics and Biostatistics Hub                            ##
##     Computational Biology Department                                ##
##     Institut Pasteur Paris                                          ##
##                                                                     ##
#########################################################################
*/


//////// variables that will be used only in the main.nf

// variables exported to the main.nf environment. See https://www.nextflow.io/docs/latest/config.html#scope-env
env {
    sample_path = "/mnt/c/Users/Gael/Documents/Git_projects/fisher_for_vcf/dataset/Dyslexia.gatk-vqsr.splitted.norm.vep.merged_first_10000.vcf.gz" // vcf. Example: "/pasteur/zeus/projets/p02/ghfc_wgs_zeus/WGS/Dyslexia/vcf/Dyslexia.gatk-vqsr.splitted.norm.vep.merged.vcf.gz". Warning, if zipped (.gz) must be together with a .tbi file. Another example: "/mnt/c/Users/Gael/Documents/Git_projects/fisher_for_vcf/dataset/Dyslexia.gatk-vqsr.splitted.norm.vep.merged_first_10000.vcf.gz"
    ped_path = "/mnt/c/Users/Gael/Documents/Git_projects/fisher_for_vcf/dataset/Dyslexia.pedigree.txt" // pedigree
    //ped_path = "/pasteur/zeus/projets/p01/BioIT/gmillot/08002_bourgeron/dataset/Dyslexia.pedigree.txt" or /mnt/c/Users/Gael/Documents/Git_projects/fisher_for_vcf/dataset/Dyslexia.pedigree.txt
    chr_path = "/mnt/c/Users/Gael/Documents/Git_projects/fisher_for_vcf/dataset/hg19_grch37p5_chr_size_cumul.txt" // human chromo infos
    //chr_path = "/pasteur/zeus/projets/p01/BioIT/gmillot/reference_genomes/human hg19_grch37/hg19_grch37p5_chr_size_cumul.txt" or /mnt/c/Users/Gael/Documents/Git_projects/fisher_for_vcf/dataset/hg19_grch37p5_chr_size_cumul.txt
    region = "none" // region to parse. Write "chr7:0-147000000, chr10:1000000-2000000" for a single region, "chr7:0-147000000, chr10:1000000-2000000" if two regions, ""chr7" for a whole chromosome, "chr7, chr1" for two chromosomes and "none" for the complete genome // Warning : replace eval() by ast.literal_eval() from ast package in the main py code ?
    tsv_extra_fields = "AC AF CSQ_SIFT CSQ_PolyPhen" // subfields from INFO to add as columns in the tsv file. Example: tsv_extra_fields = "AC AF". Write "CSQ_PolyPhen" for a sub field of the CSQ field of INFO. Write "NULL" if not required. Warning: use a single space between string
    x_lim = "whole" // x-axis limits. Either "whole" for the whole genome, "region" to have the regions of the region parameter (i.e., "whole" if region == "none"), or a character string written like the region parameter, to have the x-axis limited to the x_lim parameter. Write "NULL" to does not plot results
    vgrid = "FALSE" // either "TRUE" or "FALSE", display the chromosome separators in the miami plot? Example: vgrid = "TRUE"
    top_y_column = "NEG_LOG10_P_VALUE" // any of the OR, P_VALUE, NEG_LOG10_P_VALUE or PATIENT_NB column of the res.tsv file for the y-axis of the top manhattan plot -> miami plot. Can also be an added column through the tsv_extra_fields parameter. Indicated column of field must be quantitative.
    bottom_y_column = "AF" // any of the OR, P_VALUE, NEG_LOG10_P_VALUE or PATIENT_NB column of the res.tsv file for the y-axis of the bottom manhattan plot -> miami plot. Can also be an added column through the tsv_extra_fields parameter. Indicated column of field must be quantitative. Write "NULL" to get the res.tsv file. Then, explore the columns before rerunning the nextflow process using - resume. "NULL" generates a simple manhattan plot
    color_column = "NULL" // as for bottom_y_column in order color the dots. Write "NULL" if not required (dots will be alternatively grey and blue, according to chromo order)
    y_lim1 = "NULL" // y-axis limits of the top panel in the miami plot, made of two numbers, separated by a single space. Example: y_lim1 = "0 3". Write "NULL" for no particular limit
    y_lim2 = "NULL" // y-axis limits of the bottom panel in the miami plot, made of two numbers, separated by a single space. Example: y_lim2 = "0 3" .Write "NULL" for no particular limit. Not considered if bottom_y_column = "NULL"
    y_threshold1 = "NULL" // single numeric value for the y-axis threshold of the top panel in the miami plot, beyond which values are of interest. Example: y_threshold1 = "0 3". Write "NULL" for no particular threshold
    y_threshold2 = "NULL" // single numeric value for the y-axis threshold of the bottom panel in the miami plot, beyond which values are of interest. Example: y_threshold2 = "0 3". Write "NULL" for no particular threshold. Not considered if bottom_y_column = "NULL"
    y_log1 = "FALSE" // either "TRUE" or "FALSE", y-axis log10 scale for the top panel in the miami plot. Example: y_log1 = "TRUE"
    y_log2 = "TRUE" // either "TRUE" or "FALSE", y-axis log10 scale for the bottom panel in the miami plot. Example: y_log2 = "TRUE"
    cute_path = "https://gitlab.pasteur.fr/gmillot/cute_little_R_functions/-/raw/v11.4.0/cute_little_R_functions.R" // single character string indicating the file (and absolute pathway) of the required cute_little_R_functions toolbox. With ethernet connection available, this can also be used: "https://gitlab.pasteur.fr/gmillot/cute_little_R_functions/raw/v5.1.0/cute_little_R_functions.R" or local "C:\\Users\\Gael\\Documents\\Git_projects\\cute_little_R_functions\\cute_little_R_functions.R"
}

//////// end variables that will be used only in the main.nf




//////// variables that will be used below (and potentially in the main.nf file)

//// must be also exported
system_exec = 'local' // the system that runs the workflow. Either 'local' or 'slurm'
//out_path="/mnt/share/Users/Gael/Desktop" // where the report file will be saved. Example report_path = '.' for where the main.nf run is executed or report_path = '/mnt/c/Users/Gael/Desktop'. Warning: this does not work: out_path="/mnt/share/Users/gael/Desktop"
out_path_ini = "$baseDir/results" // where the report file will be saved. Example report_path = '.' for where the main.nf run is executed or report_path = '/mnt/c/Users/Gael/Desktop' 
//// end must be also exported

//// General variable
result_folder_name = "PL_family_WGS_fisher"
//// end General variable

//// slurm variables
// see https://confluence.pasteur.fr/pages/viewpage.action?pageId=69304504
queue = 'common,dedicated' // -p option of slurm. Example: queue = 'common,dedicated'. Example: queue = 'hubbioit'
qos = '--qos=ultrafast' // --qos option of slurm. Example: qos= '--qos=fast'. Example: qos = '--qos=ultrafast'. Example: qos = '--qos=hubbioit'. Warning, qos = '--qos=normal' only works with queue = 'common', not queue = 'common,dedicated'
add_options = ' ' // additional option of slurm. Example: addoptions = '--exclude=maestro-1101,maestro-1034' or add_options = ' ', add_options = '--time=70:00:00' (acceptable time formats include "minutes", "minutes:seconds", "hours:minutes:seconds", "days-hours", "days-hours:minutes" and "days-hours:minutes:seconds"). See https://slurm.schedmd.com/sbatch.html#OPT_time for other options
//// end slurm variables

//////// end variables that will be used below



//////// Pre processing

int secs = (new Date().getTime())/1000
out_path = "${out_path_ini}/${result_folder_name}_${secs}"

//////// end Pre processing



//////// variables used here and also in the main.nf file

env {
    system_exec = "${system_exec}"
    out_path_ini = "${out_path_ini}"
    out_path = "${out_path}"
    queue = "${queue}"
    qos = "${qos}"
    add_options = "${add_options}"
}

//////// variables used here and also in the main.nf file





//////// Scopes

// kind of execution. Either 'local' or 'slurm'
// those are closures. See https://www.nextflow.io/docs/latest/script.html#closures
executor {
    name = "${system_exec}"
    queueSize = 2000
}

// create a report folder and print a html report file . If no absolute path, will be where the run is executed
// see https://www.nextflow.io/docs/latest/config.html#config-report
report {
       enabled = true
       file = "${out_path}/reports/report.html" // warning: here double quotes to get the nextflow variable interpretation
}

// txt file with all the processes and info
trace {
    enabled = true
    file = "${out_path}/reports/trace.txt"
}

// html file with all the processes
timeline {
    enabled = true
    file = "${out_path}/reports/timeline.html"
}

// .dot picture of the workflow
dag {
    enabled = true
    file = "${out_path}/reports/dag.dot"
}


// define singularity parameters
singularity {
    enabled = true
    autoMounts = true // automatically mounts host paths in the executed container
    if(system_exec == 'slurm' || system_exec == 'slurm_local'){
        runOptions = '--no-home --bind /pasteur'
    }else{
        runOptions = '--no-home' // --no-home prevent singularity to mount the $HOME path and thus forces singularity to work with only what is inside the container
    }
    //runOptions = '--home $HOME:/home/$USER --bind /pasteur' // provide any extra command line options supported by the singularity exec. Here, fait un bind de tout /pasteur dans /pasteur du container. Sinon pas d acc√®s
    if(system_exec == 'slurm'){
        cacheDir = '/pasteur/zeus/projets/p01/BioIT/gmillot/14985_loot/singularity' // name of the directory where remote Singularity images are stored. When rerun, the exec directly uses these without redownloading them. When using a computing cluster it must be a shared folder accessible to all computing nodes
    }else if(system_exec == 'slurm_local'){
        cacheDir = 'singularity' // "$baseDir/singularity" can be used but do not forget double quotes.
    }else{
        cacheDir = '/mnt/c/Users/gmillot/singularity' // "$baseDir/singularity" can be used but do not forget double quotes.
    }
}

//////// end Scopes



//////// directives

// provide the default directives for all the processes in the main.nf pipeline calling this config file
process {
// directives for all the processes
    // executor='local' // no need because already defined above in the executor scope
    if(system_exec == 'slurm'){
        queue = "$queue"
        clusterOptions = "$qos $add_options"
        scratch=false
        maxRetries=2
        errorStrategy='retry'
    }else{
        maxRetries=0
        errorStrategy='terminate'
    }
    // all the processes of the main.nf file with the label 'bedtools' will use this directives by default
    withLabel: bash {
        container='gmillot/htslib_v1.0:gitlab_v9.1'
        cpus=1 // only used when name = "local" in the executor part above
        memory='64G' // only used when name = "local" in the executor part above
    }

    withLabel: python {
        container='gmillot/python_v3.9.10_extended_v3.1:gitlab_v8.7'
        cpus=1 // only used when name = "local" in the executor part above
        memory='64G' // only used when name = "local" in the executor part above
    }

    withLabel: r_ext {
        container='gmillot/r_v4.1.2_extended_v2.1:gitlab_v8.8'
        cpus=1 // only used when name = "local" in the executor part above
        memory='64G' // only used when name = "local" in the executor part above
    }
}

//////// end directives