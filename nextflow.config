/*
#########################################################################
##                                                                     ##
##     fisher_for_vcf.config                                           ##
##                                                                     ##
##     Gael A. Millot                                                  ##
##     Bioinformatics and Biostatistics Hub                            ##
##     Institut Pasteur Paris                                          ##
##                                                                     ##
#########################################################################
*/

/*
#########################################################################
##                                                                     ##
##     Parameters that must be set by the user                         ##
##                                                                     ##
#########################################################################
*/

/*
##########################
##                      ##
##     Fisher           ##
##                      ##
##########################
*/


env {
    sample_path = "/mnt/c/Users/gmillot/Documents/Git_projects/fisher_for_vcf/dataset/Dyslexia.gatk-vqsr.splitted.norm.vep.merged_first_10000.vcf.gz" // vcf. Example: "/pasteur/zeus/projets/p02/ghfc_wgs_zeus/WGS/Dyslexia/vcf/Dyslexia.gatk-vqsr.splitted.norm.vep.merged.vcf.gz". Warning, if zipped (.gz) must be together with a .tbi file. Another example: "/mnt/c/Users/gmillot/Documents/Git_projects/fisher_for_vcf/dataset/Dyslexia.gatk-vqsr.splitted.norm.vep.merged_first_10000.vcf.gz"
    ped_path = "/mnt/c/Users/gmillot/Documents/Git_projects/fisher_for_vcf/dataset/Dyslexia.pedigree.txt" // pedigree
    //ped_path = "/pasteur/zeus/projets/p01/BioIT/gmillot/08002_bourgeron/dataset/Dyslexia.pedigree.txt" or /mnt/c/Users/gmillot/Documents/Git_projects/fisher_for_vcf/dataset/Dyslexia.pedigree.txt
    chr_path = "/mnt/c/Users/gmillot/Documents/Git_projects/fisher_for_vcf/dataset/hg19_grch37p5_chr_size_cumul.txt" // human chromo infos
    //chr_path = "/pasteur/zeus/projets/p01/BioIT/gmillot/reference_genomes/human hg19_grch37/hg19_grch37p5_chr_size_cumul.txt" or /mnt/c/Users/gmillot/Documents/Git_projects/fisher_for_vcf/dataset/hg19_grch37p5_chr_size_cumul.txt
    region = "none" // region to parse. Write "chr7:0-147000000, chr10:1000000-2000000" for a single region, "chr7:0-147000000, chr10:1000000-2000000" if two regions, ""chr7" for a whole chromosome, "chr7, chr1" for two chromosomes and "none" for the complete genome // Warning : replace eval() by ast.literal_eval() from ast package in the main py code ?
    tsv_extra_fields = "AC AF CSQ_SIFT CSQ_PolyPhen" // subfields from INFO to add as columns in the tsv file. Example: tsv_extra_fields = "AC AF". Write "CSQ_PolyPhen" for a sub field of the CSQ field of INFO. Write "NULL" if not required. Warning: use a single space between string
}

/*
########################
##                    ##
##     Graphics       ##
##                    ##
########################
*/

env{
    x_lim = "whole" // x-axis limits. Either "whole" for the whole genome, "region" to have the regions of the region parameter (i.e., "whole" if region == "none"), or a character string written like the region parameter, to have the x-axis limited to the x_lim parameter. Write "NULL" to does not plot results
    vgrid = "FALSE" // either "TRUE" or "FALSE", display the chromosome separators in the miami plot? Example: vgrid = "TRUE"
    top_y_column = "NEG_LOG10_P_VALUE" // any of the OR, P_VALUE, NEG_LOG10_P_VALUE or PATIENT_NB column of the res.tsv file for the y-axis of the top manhattan plot -> miami plot. Can also be an added column through the tsv_extra_fields parameter. Indicated column of field must be quantitative.
    bottom_y_column = "AF" // any of the OR, P_VALUE, NEG_LOG10_P_VALUE or PATIENT_NB column of the res.tsv file for the y-axis of the bottom manhattan plot -> miami plot. Can also be an added column through the tsv_extra_fields parameter. Indicated column of field must be quantitative. Write "NULL" to get the res.tsv file. Then, explore the columns before rerunning the nextflow process using - resume. "NULL" generates a simple manhattan plot
    color_column = "NULL" // one of the column name of the res.tsv file (see bottom_y_column) in order color the dots. Write "NULL" if not required (dots will be alternatively grey and blue, according to chromo order)
    dot_border_color = "NULL" // single color character string to color the border of the dots. Write "NULL" if not required
    y_lim1 = "NULL" // y-axis limits of the top panel in the miami plot, made of two numbers, separated by a single space. Example: y_lim1 = "0 3". Write "NULL" for no particular limit
    y_lim2 = "NULL" // y-axis limits of the bottom panel in the miami plot, made of two numbers, separated by a single space. Example: y_lim2 = "0 3" .Write "NULL" for no particular limit. Not considered if bottom_y_column = "NULL"
    y_reverse1 = "FALSE" // either "TRUE" or "FALSE", y-axis coordinates flip for the top panel in the miami plot. Example: y_reverse1 = "TRUE"
    y_reverse2 = "FALSE" // either "TRUE" or "FALSE", y-axis coordinates flip for the bottom panel in the miami plot. Example: y_reverse2 = "TRUE"
    y_threshold1 = "NULL" // single numeric value for the y-axis threshold of the top panel in the miami plot, beyond which values are of interest. Example: y_threshold1 = "0 3". Write "NULL" for no particular threshold
    y_threshold2 = "NULL" // single numeric value for the y-axis threshold of the bottom panel in the miami plot, beyond which values are of interest. Example: y_threshold2 = "0 3". Write "NULL" for no particular threshold. Not considered if bottom_y_column = "NULL"
    y_log1 = "FALSE" // either "TRUE" or "FALSE", y-axis log10 scale for the top panel in the miami plot. Example: y_log1 = "TRUE"
    y_log2 = "TRUE" // either "TRUE" or "FALSE", y-axis log10 scale for the bottom panel in the miami plot. Example: y_log2 = "TRUE"
}


/*
############################
##                        ##
##     Local / Cluster    ##
##                        ##
############################
*/

// see https://confluence.pasteur.fr/pages/viewpage.action?pageId=69304504
system_exec = 'local' // single character string of the system that runs the workflow. Either 'local' to run on our own computer or 'slurm' to run on the pasteur cluster. Example: system_exec = 'local'
queue = 'common,dedicated' // single character string of the -p option of slurm. Example: queue = 'common,dedicated'. Example: queue = 'hubbioit'
qos = '--qos=ultrafast' // single character string of the --qos option of slurm. Example: qos= '--qos=fast'. Example: qos = '--qos=ultrafast'. Example: qos = '--qos=hubbioit'
add_options = ' ' // single character string of the additional option of slurm. Example: add_options = '--exclude=maestro-1101,maestro-1034' or add_options = ' ', add_options = '--time=70:00:00' (acceptable time formats include "minutes", "minutes:seconds", "hours:minutes:seconds", "days-hours", "days-hours:minutes" and "days-hours:minutes:seconds"). See https://slurm.schedmd.com/sbatch.html#OPT_time for other options

/*
#############################
##                         ##
##     Other (optional)    ##
##                         ##
#############################
*/

env{
    cute_path = "https://gitlab.pasteur.fr/gmillot/cute_little_R_functions/-/raw/v11.4.0/cute_little_R_functions.R" // single character string indicating the file (and absolute pathway) of the required cute_little_R_functions toolbox. With ethernet connection available, this can also be used: "https://gitlab.pasteur.fr/gmillot/cute_little_R_functions/raw/v5.1.0/cute_little_R_functions.R" or local "C:\\Users\\Gael\\Documents\\Git_projects\\cute_little_R_functions\\cute_little_R_functions.R"
}

singularity_path = "NULL" // single character string of the path of the singularity folder (where all the singularity images are are pulled and stored for proper nextflow execution). Write "NULL" for default path (but will not work in most cases). Example: singularity_path='/pasteur/zeus/projets/p01/BioIT/gmillot/singularity'. Example: singularity_path='/mnt/c/Users/gmillot/singularity'. Example: singularity_path="$baseDir/singularity" # do not forget double quotes
out_path_ini = "$baseDir/results" // single character string of where the output files will be saved. Example out_path_ini = '.' for where the main.nf run is executed or out_path_ini = "$baseDir/results" to put the results in a result folder (created if required), $baseDir indicating where the main.nf run is executed. Example: out_path_ini = '/mnt/c/Users/Gael/Desktop'. Example : out_path_ini="/pasteur/zeus/projets/p01/BioIT/gmillot/08002_bourgeron/results". Warning: this does not work: out_path_ini = "/mnt/share/Users/gael/Desktop"
result_folder_name="PL_family_WGS_fisher" // single character string.of the name of the folder where the results files are dorpped


/*
#########################################################################
##                                                                     ##
##     End Parameters that must be set by the user                     ##
##                                                                     ##
#########################################################################
*/










//////// Pre processing

int secs = (new Date().getTime())/1000
out_path="${out_path_ini}/${result_folder_name}_${secs}"

//////// end Pre processing



//////// variables used here and also in the main.nf file

env {
    system_exec = "${system_exec}"
    out_path_ini = "${out_path_ini}"
    out_path = "${out_path}"
    queue = "${queue}"
    qos = "${qos}"
    add_options = "${add_options}"
}

//////// variables used here and also in the main.nf file





//////// Scopes

// kind of execution. Either 'local' or 'slurm'
// those are closures. See https://www.nextflow.io/docs/latest/script.html#closures
executor {
    name = "${system_exec}"
    queueSize = 2000
}

// create a report folder and print a html report file . If no absolute path, will be where the run is executed
// see https://www.nextflow.io/docs/latest/config.html#config-report
report {
       enabled = true
       file = "${out_path}/reports/report.html" // warning: here double quotes to get the nextflow variable interpretation
}

// txt file with all the processes and info
trace {
    enabled = true
    file = "${out_path}/reports/trace.txt"
}

// html file with all the processes
timeline {
    enabled = true
    file = "${out_path}/reports/timeline.html"
}

// .dot picture of the workflow
dag {
    enabled = true
    file = "${out_path}/reports/nf_dag.png"
}


// define singularity parameters
singularity {
    enabled = true
    autoMounts = true // automatically mounts host paths in the executed container
    if(system_exec == 'slurm' || system_exec == 'slurm_local'){
        runOptions = '--no-home --bind /pasteur' //-B /run/shm:/run/shm has been removed because block the pipeline. Warning: clone_assignment process use python. Thus, -B /run/shm:/run/shm should be required normally
    }else{
        runOptions = '--no-home -B /run/shm:/run/shm' // --no-home prevent singularity to mount the $HOME path and thus forces singularity to work with only what is inside the container
    }
    //runOptions = '--home $HOME:/home/$USER --bind /pasteur' // provide any extra command line options supported by the singularity exec. Here, fait un bind de tout /pasteur dans /pasteur du container. Sinon pas d accès
    if(singularity_path == "NULL"){
        if(system_exec == 'slurm'){
            cacheDir = '/pasteur/zeus/projets/p01/BioIT/gmillot/singularity' // name of the directory where remote Singularity images are stored. When rerun, the exec directly uses these without redownloading them. When using a computing cluster it must be a shared folder accessible to all computing nodes
        }else if(system_exec == 'slurm_local'){
            cacheDir = 'singularity' // "$baseDir/singularity" can be used but do not forget double quotes.
        }else{
            cacheDir = '/mnt/c/Users/gmillot/singularity' // "$baseDir/singularity" can be used but do not forget double quotes.
        }
    }else{
        cacheDir = "${singularity_path}"
    }
}

//////// end Scopes



//////// directives

// provide the default directives for all the processes in the main.nf pipeline calling this config file
process {
// directives for all the processes
    // executor='local' // no need because already defined above in the executor scope
    if(system_exec == 'slurm'){
        queue = "$queue"
        clusterOptions = "$qos $add_options"
        scratch=false
        maxRetries=3
        errorStrategy{ task.exitStatus in 137..143 ? 'retry' : 'terminate' }
    }else{
        maxRetries=0
        errorStrategy='terminate'
    }

    withLabel: bash {
        container='gmillot/htslib_v1.0:gitlab_v9.1'
        cpus=1 // only used when name = "local" in the executor part above
        memory='60G' // only used when name = "local" in the executor part above
    }

    withLabel: python {
        container='gmillot/python_v3.9.10_extended_v3.1:gitlab_v8.7'
        cpus=1 // only used when name = "local" in the executor part above
        memory='60G' // only used when name = "local" in the executor part above
    }

    withLabel: r_ext {
        container='gmillot/r_v4.1.2_extended_v2.1:gitlab_v8.8'
        cpus=1 // only used when name = "local" in the executor part above
        memory='60G' // only used when name = "local" in the executor part above
    }
}

//////// end directives